# How this works:
# First we use turborepo to prune our horizon package to only the required deps
# After that, we move Horizon's dockerfile & related files to our out dir
  # We do this because Elastic Beanstalk requires an artifact upload to deploy, with the Dockerfile in its root dir
  # So we store the dockerfile/etc.. in its respective project, but during deployment move it into our out dir so its there when we package it
# Then we build our dockerfile to ensure it'll build fine
name: Build Docker & Deploy to EBS

on:
  push:
    branches:
      - main
    paths:
      - 'portals/horizon/**'

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        npm install -g pnpm turbo

    - name: Run turbo prune
      run: |
        turbo prune --scope=horizon --docker

    - name: Check and move files
      run: |
        cd out
        mv full/portals/horizon/Dockerfile .
        mv full/portals/horizon/.dockerignore .
        mv full/portals/horizon/.elasticbeanstalk .

    - name: Build Docker image
      run: |
        cd out
        docker build -t horizon .

    - name: Zip out directory
      run: |
        cd out
        zip -r out.zip * -x "*.git"

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: out-zipped
        path: out/out.zip

    - name: Deploy Node package to AWS Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v14
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        application_name: horizon
        environment_name: horizon-staging
        version_label: ${{ github.sha }}
        region: us-west-1
        deployment_package: out/out.zip

    - name: Clean up
      run: |
        cd ..
        rm -rf out/
        echo "Done."
